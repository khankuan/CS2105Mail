package cs2105mail;

import java.util.*;
import javax.swing.table.TableRowSorter;

/*
 * CS2105MailGUI.java
 *
// * Created on Oct 4, 2011, 3:52:43 PM
 */

/*
 *
 * @author Chua Wei Kuan (A0072749U)
 */
public class MailGUI extends javax.swing.JFrame {

    /** Creates new form CS2105MailGUI */
    public MailGUI() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        MainTab = new javax.swing.JTabbedPane();
        ComposeMailLayeredPane = new javax.swing.JLayeredPane();
        ComposeMailPane = new javax.swing.JPanel();
        ComposeMail_FromEmail = new javax.swing.JTextField();
        ComposeMail_FromLabel = new javax.swing.JLabel();
        ComposeMail_SMTP = new javax.swing.JTextField();
        ComposeMail_Subject = new javax.swing.JTextField();
        ComposeMail_SendButton = new javax.swing.JButton();
        ComposeMail_ToLabel = new javax.swing.JLabel();
        ComposeMail_ToEmail = new javax.swing.JTextField();
        ComposeMail_BodyLabel = new javax.swing.JLabel();
        ComposeMail_SubjectLabel = new javax.swing.JLabel();
        ComposeMail_BodyScrollPane = new javax.swing.JScrollPane();
        ComposeMail_Body = new javax.swing.JTextArea();
        ComposeMail_SMTPLabel = new javax.swing.JLabel();
        ComposeMail_DialogScrollPane = new javax.swing.JScrollPane();
        ComposeMail_Dialog = new javax.swing.JTextArea();
        ComposeMail_UsernameLabel = new javax.swing.JLabel();
        ComposeMail_Username = new javax.swing.JTextField();
        ComposeMail_PasswordLabel = new javax.swing.JLabel();
        ComposeMail_Password = new javax.swing.JPasswordField();
        SentMailsLayeredPane = new javax.swing.JLayeredPane();
        SentMailsPane = new javax.swing.JPanel();
        SentMail_DisplayMailScrollPane = new javax.swing.JScrollPane();
        SentMail_DisplayMail = new javax.swing.JTextArea();
        SentMail_SavedHeadersScrollPane = new javax.swing.JScrollPane();
        SentMail_SavedHeadersTable = new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex, int colIndex) {
                return false;
            }
        };
        InboxLayeredPane = new javax.swing.JLayeredPane();
        InboxPanel = new javax.swing.JPanel();
        Inbox_RetrieveButton = new javax.swing.JButton();
        Inbox_DisplayMailScrollPane = new javax.swing.JScrollPane();
        Inbox_DisplayMail = new javax.swing.JTextArea();
        Inbox_Pop3 = new javax.swing.JTextField();
        Inbox_Pop3Label = new javax.swing.JLabel();
        Inbox_PasswordLabel = new javax.swing.JLabel();
        Inbox_Password = new javax.swing.JPasswordField();
        Inbox_Username = new javax.swing.JTextField();
        Inbox_UsernameLabel = new javax.swing.JLabel();
        Inbox_MailHeadersScrollPane = new javax.swing.JScrollPane();
        Inbox_MailHeaderTable = new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex, int colIndex) {
                return false;
            }
        };

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(0, 0, 0));

        MainTab.setBackground(new java.awt.Color(255, 255, 255));
        MainTab.setFont(new java.awt.Font("Tahoma", 0, 18));
        MainTab.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                MainTabStateChanged(evt);
            }
        });

        ComposeMailPane.setBackground(new java.awt.Color(199, 221, 241));
        ComposeMailPane.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        ComposeMail_FromEmail.setFont(new java.awt.Font("Tahoma", 0, 14));
        ComposeMail_FromEmail.setMargin(new java.awt.Insets(2, 4, 2, 4));
        ComposeMail_FromEmail.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                ComposeMail_FromEmailFocusGained(evt);
            }
        });

        ComposeMail_FromLabel.setFont(new java.awt.Font("Tahoma", 0, 18));
        ComposeMail_FromLabel.setText("From:");

        ComposeMail_SMTP.setFont(new java.awt.Font("Tahoma", 0, 14));
        ComposeMail_SMTP.setText("smtp.nus.edu.sg");
        ComposeMail_SMTP.setDisabledTextColor(new java.awt.Color(204, 204, 204));
        ComposeMail_SMTP.setMargin(new java.awt.Insets(2, 4, 2, 4));
        ComposeMail_SMTP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComposeMail_SMTPActionPerformed(evt);
            }
        });
        ComposeMail_SMTP.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                ComposeMail_SMTPFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                ComposeMail_SMTPFocusLost(evt);
            }
        });

        ComposeMail_Subject.setFont(new java.awt.Font("Tahoma", 0, 14));
        ComposeMail_Subject.setMargin(new java.awt.Insets(2, 4, 2, 4));

        ComposeMail_SendButton.setBackground(new java.awt.Color(0, 30, 176));
        ComposeMail_SendButton.setFont(new java.awt.Font("Lucida Sans Unicode", 0, 50));
        ComposeMail_SendButton.setForeground(new java.awt.Color(255, 255, 255));
        ComposeMail_SendButton.setText(" Send ");
        ComposeMail_SendButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(0, 30, 176), new java.awt.Color(0, 30, 176), new java.awt.Color(0, 30, 176), new java.awt.Color(0, 30, 176)));
        ComposeMail_SendButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        ComposeMail_SendButton.setFocusable(false);
        ComposeMail_SendButton.setMaximumSize(new java.awt.Dimension(153, 83));
        ComposeMail_SendButton.setMinimumSize(new java.awt.Dimension(153, 83));
        ComposeMail_SendButton.setPreferredSize(new java.awt.Dimension(153, 83));
        ComposeMail_SendButton.setRequestFocusEnabled(false);
        ComposeMail_SendButton.setSelected(true);
        ComposeMail_SendButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComposeMail_SendButtonActionPerformed(evt);
            }
        });

        ComposeMail_ToLabel.setFont(new java.awt.Font("Tahoma", 0, 18));
        ComposeMail_ToLabel.setText("To:");

        ComposeMail_ToEmail.setFont(new java.awt.Font("Tahoma", 0, 14));
        ComposeMail_ToEmail.setMargin(new java.awt.Insets(2, 4, 2, 4));
        ComposeMail_ToEmail.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                ComposeMail_ToEmailFocusGained(evt);
            }
        });

        ComposeMail_BodyLabel.setFont(new java.awt.Font("Tahoma", 0, 18));
        ComposeMail_BodyLabel.setText("Body:");

        ComposeMail_SubjectLabel.setFont(new java.awt.Font("Tahoma", 0, 18));
        ComposeMail_SubjectLabel.setText("Subject:");

        ComposeMail_Body.setColumns(20);
        ComposeMail_Body.setFont(new java.awt.Font("Tahoma", 0, 14));
        ComposeMail_Body.setLineWrap(true);
        ComposeMail_Body.setRows(5);
        ComposeMail_Body.setWrapStyleWord(true);
        ComposeMail_Body.setAlignmentX(1.0F);
        ComposeMail_Body.setAlignmentY(1.0F);
        ComposeMail_Body.setFocusCycleRoot(true);
        ComposeMail_Body.setFocusTraversalPolicyProvider(true);
        ComposeMail_Body.setMargin(new java.awt.Insets(4, 4, 4, 4));
        ComposeMail_Body.setNextFocusableComponent(ComposeMail_SMTP);
        ComposeMail_BodyScrollPane.setViewportView(ComposeMail_Body);

        ComposeMail_SMTPLabel.setFont(new java.awt.Font("Tahoma", 0, 14));
        ComposeMail_SMTPLabel.setText("Preferred SMTP Server (if any):");

        ComposeMail_Dialog.setBackground(new java.awt.Color(114, 159, 252));
        ComposeMail_Dialog.setColumns(20);
        ComposeMail_Dialog.setEditable(false);
        ComposeMail_Dialog.setFont(new java.awt.Font("Lucida Sans", 0, 13));
        ComposeMail_Dialog.setForeground(new java.awt.Color(255, 255, 255));
        ComposeMail_Dialog.setLineWrap(true);
        ComposeMail_Dialog.setRows(5);
        ComposeMail_Dialog.setText("Welcome!\n");
        ComposeMail_Dialog.setAlignmentX(1.0F);
        ComposeMail_Dialog.setAlignmentY(1.0F);
        ComposeMail_Dialog.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(114, 159, 252)));
        ComposeMail_Dialog.setCaretColor(new java.awt.Color(255, 255, 255));
        ComposeMail_Dialog.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        ComposeMail_Dialog.setDisabledTextColor(new java.awt.Color(255, 255, 255));
        ComposeMail_Dialog.setMargin(new java.awt.Insets(4, 4, 4, 4));
        ComposeMail_Dialog.setSelectionColor(new java.awt.Color(255, 255, 255));
        ComposeMail_DialogScrollPane.setViewportView(ComposeMail_Dialog);

        ComposeMail_UsernameLabel.setFont(new java.awt.Font("Tahoma", 0, 18));
        ComposeMail_UsernameLabel.setText("Domain/Username:");

        ComposeMail_Username.setFont(new java.awt.Font("Tahoma", 0, 14));
        ComposeMail_Username.setMargin(new java.awt.Insets(2, 4, 2, 4));
        ComposeMail_Username.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComposeMail_UsernameActionPerformed(evt);
            }
        });
        ComposeMail_Username.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                ComposeMail_UsernameFocusGained(evt);
            }
        });

        ComposeMail_PasswordLabel.setFont(new java.awt.Font("Tahoma", 0, 18));
        ComposeMail_PasswordLabel.setText("Password:");

        ComposeMail_Password.setFont(new java.awt.Font("Tahoma", 0, 14));
        ComposeMail_Password.setMargin(new java.awt.Insets(2, 4, 2, 4));
        ComposeMail_Password.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComposeMail_PasswordActionPerformed(evt);
            }
        });
        ComposeMail_Password.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                ComposeMail_PasswordFocusGained(evt);
            }
        });

        javax.swing.GroupLayout ComposeMailPaneLayout = new javax.swing.GroupLayout(ComposeMailPane);
        ComposeMailPane.setLayout(ComposeMailPaneLayout);
        ComposeMailPaneLayout.setHorizontalGroup(
            ComposeMailPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ComposeMailPaneLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(ComposeMailPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(ComposeMail_FromLabel)
                    .addComponent(ComposeMail_ToLabel)
                    .addComponent(ComposeMail_SubjectLabel)
                    .addComponent(ComposeMail_BodyLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ComposeMailPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ComposeMail_DialogScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 660, Short.MAX_VALUE)
                    .addGroup(ComposeMailPaneLayout.createSequentialGroup()
                        .addGroup(ComposeMailPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(ComposeMail_PasswordLabel)
                            .addComponent(ComposeMail_UsernameLabel)
                            .addComponent(ComposeMail_SMTPLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(ComposeMailPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(ComposeMail_SMTP)
                            .addComponent(ComposeMail_Password)
                            .addComponent(ComposeMail_Username, javax.swing.GroupLayout.DEFAULT_SIZE, 252, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 56, Short.MAX_VALUE)
                        .addComponent(ComposeMail_SendButton, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(ComposeMail_Subject, javax.swing.GroupLayout.DEFAULT_SIZE, 660, Short.MAX_VALUE)
                    .addGroup(ComposeMailPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(ComposeMail_ToEmail, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(ComposeMail_FromEmail, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 207, Short.MAX_VALUE))
                    .addComponent(ComposeMail_BodyScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 660, Short.MAX_VALUE))
                .addContainerGap())
        );
        ComposeMailPaneLayout.setVerticalGroup(
            ComposeMailPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ComposeMailPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ComposeMailPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ComposeMail_FromEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ComposeMail_FromLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ComposeMailPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ComposeMail_ToEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ComposeMail_ToLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ComposeMailPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ComposeMail_Subject, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ComposeMail_SubjectLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ComposeMailPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ComposeMailPaneLayout.createSequentialGroup()
                        .addComponent(ComposeMail_BodyScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(ComposeMailPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(ComposeMailPaneLayout.createSequentialGroup()
                                .addGroup(ComposeMailPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(ComposeMail_Username, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(ComposeMail_UsernameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(ComposeMailPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(ComposeMail_Password, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(ComposeMail_PasswordLabel))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(ComposeMailPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(ComposeMail_SMTP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(ComposeMail_SMTPLabel)))
                            .addComponent(ComposeMail_SendButton, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(ComposeMail_DialogScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 119, Short.MAX_VALUE))
                    .addComponent(ComposeMail_BodyLabel))
                .addContainerGap())
        );

        ComposeMailPane.setBounds(0, 0, 750, 620);
        ComposeMailLayeredPane.add(ComposeMailPane, javax.swing.JLayeredPane.DEFAULT_LAYER);

        MainTab.addTab("Compose mail", ComposeMailLayeredPane);

        SentMailsPane.setBackground(new java.awt.Color(199, 221, 241));

        SentMail_DisplayMail.setColumns(20);
        SentMail_DisplayMail.setEditable(false);
        SentMail_DisplayMail.setFont(new java.awt.Font("Tahoma", 0, 14));
        SentMail_DisplayMail.setLineWrap(true);
        SentMail_DisplayMail.setRows(5);
        SentMail_DisplayMail.setWrapStyleWord(true);
        SentMail_DisplayMail.setAlignmentX(1.0F);
        SentMail_DisplayMail.setAlignmentY(1.0F);
        SentMail_DisplayMail.setMargin(new java.awt.Insets(4, 4, 4, 4));
        SentMail_DisplayMail.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                SentMail_DisplayMailMouseEntered(evt);
            }
        });
        SentMail_DisplayMailScrollPane.setViewportView(SentMail_DisplayMail);

        SentMail_SavedHeadersTable.setAutoCreateRowSorter(true);
        SentMail_SavedHeadersTable.setBackground(new java.awt.Color(114, 159, 252));
        SentMail_SavedHeadersTable.setFont(new java.awt.Font("Trebuchet MS", 0, 14));
        SentMail_SavedHeadersTable.setForeground(new java.awt.Color(255, 255, 255));
        SentMail_SavedHeadersTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        SentMail_SavedHeadersTable.setFillsViewportHeight(true);
        SentMail_SavedHeadersTable.setFocusCycleRoot(true);
        SentMail_SavedHeadersTable.setFocusable(false);
        SentMail_SavedHeadersTable.setGridColor(new java.awt.Color(0, 0, 204));
        SentMail_SavedHeadersTable.setRequestFocusEnabled(false);
        SentMail_SavedHeadersTable.setRowHeight(20);
        SentMail_SavedHeadersTable.setRowMargin(3);
        SentMail_SavedHeadersTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        SentMail_SavedHeadersTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SentMail_SavedHeadersTableMouseClicked(evt);
            }
        });
        SentMail_SavedHeadersScrollPane.setViewportView(SentMail_SavedHeadersTable);

        javax.swing.GroupLayout SentMailsPaneLayout = new javax.swing.GroupLayout(SentMailsPane);
        SentMailsPane.setLayout(SentMailsPaneLayout);
        SentMailsPaneLayout.setHorizontalGroup(
            SentMailsPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, SentMailsPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(SentMailsPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(SentMail_DisplayMailScrollPane, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 730, Short.MAX_VALUE)
                    .addComponent(SentMail_SavedHeadersScrollPane, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 730, Short.MAX_VALUE))
                .addContainerGap())
        );
        SentMailsPaneLayout.setVerticalGroup(
            SentMailsPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SentMailsPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(SentMail_SavedHeadersScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(SentMail_DisplayMailScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 369, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(65, Short.MAX_VALUE))
        );

        SentMailsPane.setBounds(0, 0, 750, 670);
        SentMailsLayeredPane.add(SentMailsPane, javax.swing.JLayeredPane.DEFAULT_LAYER);

        MainTab.addTab("Sent mails", SentMailsLayeredPane);

        InboxLayeredPane.setBackground(new java.awt.Color(199, 221, 241));

        InboxPanel.setBackground(new java.awt.Color(199, 221, 241));
        InboxPanel.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        Inbox_RetrieveButton.setBackground(new java.awt.Color(0, 30, 176));
        Inbox_RetrieveButton.setFont(new java.awt.Font("Lucida Sans Unicode", 0, 50));
        Inbox_RetrieveButton.setForeground(new java.awt.Color(255, 255, 255));
        Inbox_RetrieveButton.setText("Retrieve");
        Inbox_RetrieveButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(0, 30, 176), new java.awt.Color(0, 30, 176), new java.awt.Color(0, 30, 176), new java.awt.Color(0, 30, 176)));
        Inbox_RetrieveButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        Inbox_RetrieveButton.setFocusable(false);
        Inbox_RetrieveButton.setRequestFocusEnabled(false);
        Inbox_RetrieveButton.setSelected(true);
        Inbox_RetrieveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Inbox_RetrieveButtonActionPerformed(evt);
            }
        });

        Inbox_DisplayMail.setColumns(20);
        Inbox_DisplayMail.setEditable(false);
        Inbox_DisplayMail.setFont(new java.awt.Font("Tahoma", 0, 14));
        Inbox_DisplayMail.setLineWrap(true);
        Inbox_DisplayMail.setRows(5);
        Inbox_DisplayMail.setWrapStyleWord(true);
        Inbox_DisplayMail.setAlignmentX(1.0F);
        Inbox_DisplayMail.setAlignmentY(1.0F);
        Inbox_DisplayMail.setMargin(new java.awt.Insets(4, 4, 4, 4));
        Inbox_DisplayMail.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                Inbox_DisplayMailMouseEntered(evt);
            }
        });
        Inbox_DisplayMailScrollPane.setViewportView(Inbox_DisplayMail);

        Inbox_Pop3.setFont(new java.awt.Font("Tahoma", 0, 14));
        Inbox_Pop3.setText("pop.nus.edu.sg");
        Inbox_Pop3.setDisabledTextColor(new java.awt.Color(204, 204, 204));
        Inbox_Pop3.setMargin(new java.awt.Insets(2, 4, 2, 4));
        Inbox_Pop3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Inbox_Pop3ActionPerformed(evt);
            }
        });
        Inbox_Pop3.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                Inbox_Pop3FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                Inbox_Pop3FocusLost(evt);
            }
        });

        Inbox_Pop3Label.setFont(new java.awt.Font("Tahoma", 0, 14));
        Inbox_Pop3Label.setText("Preferred POP3 Server (if any):");

        Inbox_PasswordLabel.setFont(new java.awt.Font("Tahoma", 0, 18));
        Inbox_PasswordLabel.setText("Password:");

        Inbox_Password.setFont(new java.awt.Font("Tahoma", 0, 14));
        Inbox_Password.setMargin(new java.awt.Insets(2, 4, 2, 4));
        Inbox_Password.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Inbox_PasswordActionPerformed(evt);
            }
        });
        Inbox_Password.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                Inbox_PasswordFocusGained(evt);
            }
        });

        Inbox_Username.setFont(new java.awt.Font("Tahoma", 0, 14));
        Inbox_Username.setMargin(new java.awt.Insets(2, 4, 2, 4));
        Inbox_Username.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Inbox_UsernameActionPerformed(evt);
            }
        });
        Inbox_Username.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                Inbox_UsernameFocusGained(evt);
            }
        });

        Inbox_UsernameLabel.setFont(new java.awt.Font("Tahoma", 0, 18));
        Inbox_UsernameLabel.setText("Domain/Username:");

        Inbox_MailHeaderTable.setBackground(new java.awt.Color(114, 159, 252));
        Inbox_MailHeaderTable.setFont(new java.awt.Font("Trebuchet MS", 0, 14));
        Inbox_MailHeaderTable.setForeground(new java.awt.Color(255, 255, 255));
        Inbox_MailHeaderTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        Inbox_MailHeaderTable.setFocusable(false);
        Inbox_MailHeaderTable.setGridColor(new java.awt.Color(0, 0, 204));
        Inbox_MailHeaderTable.setRowHeight(18);
        Inbox_MailHeaderTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        Inbox_MailHeaderTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Inbox_MailHeaderTableMouseClicked(evt);
            }
        });
        Inbox_MailHeadersScrollPane.setViewportView(Inbox_MailHeaderTable);

        javax.swing.GroupLayout InboxPanelLayout = new javax.swing.GroupLayout(InboxPanel);
        InboxPanel.setLayout(InboxPanelLayout);
        InboxPanelLayout.setHorizontalGroup(
            InboxPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(InboxPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(InboxPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(InboxPanelLayout.createSequentialGroup()
                        .addGroup(InboxPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(Inbox_UsernameLabel)
                            .addComponent(Inbox_PasswordLabel)
                            .addComponent(Inbox_Pop3Label))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(InboxPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(Inbox_Pop3)
                            .addComponent(Inbox_Password)
                            .addComponent(Inbox_Username, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 71, Short.MAX_VALUE)
                        .addComponent(Inbox_RetrieveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(Inbox_MailHeadersScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 730, Short.MAX_VALUE)
                    .addComponent(Inbox_DisplayMailScrollPane, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 730, Short.MAX_VALUE))
                .addContainerGap())
        );
        InboxPanelLayout.setVerticalGroup(
            InboxPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(InboxPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(InboxPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(InboxPanelLayout.createSequentialGroup()
                        .addGroup(InboxPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Inbox_UsernameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Inbox_Username, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(InboxPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Inbox_PasswordLabel)
                            .addComponent(Inbox_Password, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(InboxPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Inbox_Pop3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Inbox_Pop3Label)))
                    .addComponent(Inbox_RetrieveButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(13, 13, 13)
                .addComponent(Inbox_MailHeadersScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Inbox_DisplayMailScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(21, Short.MAX_VALUE))
        );

        InboxPanel.setBounds(0, 0, 750, 622);
        InboxLayeredPane.add(InboxPanel, javax.swing.JLayeredPane.DEFAULT_LAYER);

        MainTab.addTab("Inbox", InboxLayeredPane);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MainTab, javax.swing.GroupLayout.PREFERRED_SIZE, 753, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MainTab, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 655, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void MainTabStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_MainTabStateChanged
    //  Refresh or load sent mails tab
    if (MainTab.getSelectedIndex() == 1){
        try{
            //  loading of saved file and getting mail headers
            main.loadSavedSentFile();
            //  Model for table
            Object[][] sents = new Object[main.getSentMailCount()][4];
            String[] headers = new String [] {"From", "To", "Subject", "SMTP"};
   
            for (int i = 0; i < main.getSentMailCount(); i++)
                sents[i] = ((Object[]) main.getSentMailHeaders(i));

            //  set model
            javax.swing.table.DefaultTableModel temp = new javax.swing.table.DefaultTableModel(
                sents,headers);
            SentMail_SavedHeadersTable.setModel(temp);
            SentMail_SavedHeadersTable.setVisible(true);
            SentMail_SavedHeadersTable.getTableHeader().setReorderingAllowed(false);
            SentMail_DisplayMail.setText("");
        } catch (Exception ex){
            SentMail_SavedHeadersTable.setVisible(false);
            SentMail_DisplayMail.setText(ex.getMessage());
        }
    } 
}//GEN-LAST:event_MainTabStateChanged

private void ComposeMail_SendButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComposeMail_SendButtonActionPerformed
    //  Send email
    try{
        main.sendMail(ComposeMail_SMTP.getText(), ComposeMail_Username.getText(), new String(ComposeMail_Password.getPassword()),
            ComposeMail_FromEmail.getText(), ComposeMail_ToEmail.getText(), ComposeMail_Subject.getText(), ComposeMail_Body.getText());
    } catch(Exception ex){
        print(ex.getMessage());
        return;
    }
         
    //  Clear text areas after sucessful sending and saving of mail
    print("Email sent!");
    ComposeMail_FromEmail.setText("");
    ComposeMail_ToEmail.setText("");
    ComposeMail_Subject.setText("");
    ComposeMail_Body.setText("");     
}//GEN-LAST:event_ComposeMail_SendButtonActionPerformed

private void Inbox_Pop3FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_Inbox_Pop3FocusLost
    //  Refill default POP3 server
    if (Inbox_Pop3.getText().length() == 0)
        Inbox_Pop3.setText("pop.nus.edu.sg");
}//GEN-LAST:event_Inbox_Pop3FocusLost

private void Inbox_RetrieveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Inbox_RetrieveButtonActionPerformed
     //  try loading inbox from server with headers
    try {
        if (main.isInboxStarted()){
            Inbox_MailHeaderTable.setVisible(false);
            Inbox_DisplayMail.setText("");
            
        }
        main.retrieveInbox(Inbox_Pop3.getText(),Inbox_Username.getText(),
                new String(Inbox_Password.getPassword()));
        Inbox_MailHeaderTable.setVisible(true);
    } catch (Exception ex){
        Inbox_DisplayMail.append(ex.getMessage()+"\n");
        return;
    }
        
    //  Adds all mail headers for Table display   
    Object[][] retrieved = new Object[main.getInboxCount()][4];
    String[] headers = new String [] {"From", "Subject", "Date", "Size (Bytes)"};

    for (int i = 0; i < main.getInboxCount(); i++)
        retrieved[i] = main.getInboxMailHeaders(i);
    
    //  Create new table model
    javax.swing.table.DefaultTableModel newTableModel = new javax.swing.table.DefaultTableModel(
        retrieved,headers);
    TableRowSorter newTableRowSorter = new TableRowSorter(newTableModel);
    newTableRowSorter.setComparator(2, date_comparator);
    newTableRowSorter.setComparator(3, int_comparator);
    Inbox_MailHeaderTable.setModel(newTableModel);
    Inbox_MailHeaderTable.setRowSorter(newTableRowSorter);
    Inbox_MailHeaderTable.getTableHeader().setReorderingAllowed(false);
    
    //  Display stats
    Inbox_DisplayMail.setText("Emails retrieved!\n"+main.getInboxCount()+" mails.\n"+main.getInboxTotalSize()
            +" bytes in total.\n");
}//GEN-LAST:event_Inbox_RetrieveButtonActionPerformed

private void Inbox_MailHeaderTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Inbox_MailHeaderTableMouseClicked
    try {
        //  Update selection of inbox mails
        Inbox_DisplayMail.setText(main.readMail(Inbox_MailHeaderTable.getRowSorter()
                    .convertRowIndexToModel(Inbox_MailHeaderTable.getSelectedRow())));
    } catch (Exception ex) {
        Inbox_DisplayMail.setText(ex.getMessage());
    }
    Inbox_DisplayMail.setCaretPosition(0);
}//GEN-LAST:event_Inbox_MailHeaderTableMouseClicked

private void SentMail_SavedHeadersTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SentMail_SavedHeadersTableMouseClicked
    // start function to retrieve email from pop3 server
    int i = SentMail_SavedHeadersTable.getRowSorter()
            .convertRowIndexToModel(SentMail_SavedHeadersTable.getSelectedRow());
    
    //  Display mail
    try {
        String heads[] = main.getSentMailHeaders(i);
        SentMail_DisplayMail.setText("From: "+heads[0]+"\n\n"+
                "To: "+heads[1]+"\n\n"+
                "Subject: "+heads[2]+
                "\n\n"+main.getSentMail(i) +"\n\n"+
                "Mailed by: "+heads[3]);
    } catch (Exception ex){
        SentMail_DisplayMail.setText("Unknown error.");    
    }
    SentMail_DisplayMail.setCaretPosition(0);
}//GEN-LAST:event_SentMail_SavedHeadersTableMouseClicked

private void Inbox_DisplayMailMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Inbox_DisplayMailMouseEntered
    //  grab focus
    Inbox_DisplayMail.grabFocus();
}//GEN-LAST:event_Inbox_DisplayMailMouseEntered

private void SentMail_DisplayMailMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SentMail_DisplayMailMouseEntered
    // grab focus
    SentMail_DisplayMail.grabFocus();
}//GEN-LAST:event_SentMail_DisplayMailMouseEntered

    private void ComposeMail_SMTPFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_ComposeMail_SMTPFocusLost
        if (ComposeMail_SMTP.getText().length() == 0)
            ComposeMail_SMTP.setText("smtp.nus.edu.sg");
    }//GEN-LAST:event_ComposeMail_SMTPFocusLost

    private void ComposeMail_FromEmailFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_ComposeMail_FromEmailFocusGained
        ComposeMail_FromEmail.setSelectionStart(0);
        ComposeMail_FromEmail.setSelectionEnd(Integer.MAX_VALUE);
    }//GEN-LAST:event_ComposeMail_FromEmailFocusGained

    private void ComposeMail_ToEmailFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_ComposeMail_ToEmailFocusGained
        ComposeMail_ToEmail.setSelectionStart(0);
        ComposeMail_ToEmail.setSelectionEnd(Integer.MAX_VALUE);
    }//GEN-LAST:event_ComposeMail_ToEmailFocusGained

    private void ComposeMail_UsernameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_ComposeMail_UsernameFocusGained
        ComposeMail_Username.setSelectionStart(0);
        ComposeMail_Username.setSelectionEnd(Integer.MAX_VALUE);
    }//GEN-LAST:event_ComposeMail_UsernameFocusGained

    private void ComposeMail_PasswordFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_ComposeMail_PasswordFocusGained
        ComposeMail_Password.setSelectionStart(0);
        ComposeMail_Password.setSelectionEnd(Integer.MAX_VALUE);
    }//GEN-LAST:event_ComposeMail_PasswordFocusGained

    private void ComposeMail_SMTPFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_ComposeMail_SMTPFocusGained
        ComposeMail_SMTP.setSelectionStart(0);
        ComposeMail_SMTP.setSelectionEnd(Integer.MAX_VALUE);
    }//GEN-LAST:event_ComposeMail_SMTPFocusGained

    private void Inbox_UsernameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_Inbox_UsernameFocusGained
        Inbox_Username.setSelectionStart(0);
        Inbox_Username.setSelectionEnd(Integer.MAX_VALUE);
    }//GEN-LAST:event_Inbox_UsernameFocusGained

    private void Inbox_PasswordFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_Inbox_PasswordFocusGained
        Inbox_Password.setSelectionStart(0);
        Inbox_Password.setSelectionEnd(Integer.MAX_VALUE);
    }//GEN-LAST:event_Inbox_PasswordFocusGained

    private void Inbox_Pop3FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_Inbox_Pop3FocusGained
        Inbox_Pop3.setSelectionStart(0);
        Inbox_Pop3.setSelectionEnd(Integer.MAX_VALUE);
    }//GEN-LAST:event_Inbox_Pop3FocusGained

    private void Inbox_PasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Inbox_PasswordActionPerformed
        Inbox_RetrieveButtonActionPerformed(evt);
    }//GEN-LAST:event_Inbox_PasswordActionPerformed

    private void ComposeMail_PasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComposeMail_PasswordActionPerformed
        ComposeMail_SendButtonActionPerformed(evt);
    }//GEN-LAST:event_ComposeMail_PasswordActionPerformed

    private void ComposeMail_UsernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComposeMail_UsernameActionPerformed
        ComposeMail_SendButtonActionPerformed(evt);
    }//GEN-LAST:event_ComposeMail_UsernameActionPerformed

    private void ComposeMail_SMTPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComposeMail_SMTPActionPerformed
        ComposeMail_SendButtonActionPerformed(evt);
    }//GEN-LAST:event_ComposeMail_SMTPActionPerformed

    private void Inbox_UsernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Inbox_UsernameActionPerformed
        Inbox_RetrieveButtonActionPerformed(evt);
    }//GEN-LAST:event_Inbox_UsernameActionPerformed

    private void Inbox_Pop3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Inbox_Pop3ActionPerformed
        Inbox_RetrieveButtonActionPerformed(evt);
    }//GEN-LAST:event_Inbox_Pop3ActionPerformed

public void print(String s){
    //  Function to print send mail statuses
    ComposeMail_Dialog.append(s+"\n");
}

Comparator date_comparator = new Comparator() {
        @Override
        public int compare(Object s1, Object s2){
            return ((Date)s1).compareTo(((Date)s2));
        }
        public boolean equal(Object s1, Object s2){
            return ((Date)s1).equals(((Date)s2));
        }
};

Comparator int_comparator = new Comparator() {
        @Override
        public int compare(Object s1, Object s2){
            return (Integer)s1 - (Integer) s2;
        }
        public boolean equals(Object s1, Object s2){
            if ((Integer)s1 == (Integer)s2)
                return true;
            return false;
        }
};


    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MailGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MailGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MailGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MailGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {

            @Override
            public void run() {
                new MailGUI().setVisible(true);
            }
        });
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLayeredPane ComposeMailLayeredPane;
    private javax.swing.JPanel ComposeMailPane;
    private javax.swing.JTextArea ComposeMail_Body;
    private javax.swing.JLabel ComposeMail_BodyLabel;
    private javax.swing.JScrollPane ComposeMail_BodyScrollPane;
    private javax.swing.JTextArea ComposeMail_Dialog;
    private javax.swing.JScrollPane ComposeMail_DialogScrollPane;
    private javax.swing.JTextField ComposeMail_FromEmail;
    private javax.swing.JLabel ComposeMail_FromLabel;
    private javax.swing.JPasswordField ComposeMail_Password;
    private javax.swing.JLabel ComposeMail_PasswordLabel;
    private javax.swing.JTextField ComposeMail_SMTP;
    private javax.swing.JLabel ComposeMail_SMTPLabel;
    private javax.swing.JButton ComposeMail_SendButton;
    private javax.swing.JTextField ComposeMail_Subject;
    private javax.swing.JLabel ComposeMail_SubjectLabel;
    private javax.swing.JTextField ComposeMail_ToEmail;
    private javax.swing.JLabel ComposeMail_ToLabel;
    private javax.swing.JTextField ComposeMail_Username;
    private javax.swing.JLabel ComposeMail_UsernameLabel;
    private javax.swing.JLayeredPane InboxLayeredPane;
    private javax.swing.JPanel InboxPanel;
    private javax.swing.JTextArea Inbox_DisplayMail;
    private javax.swing.JScrollPane Inbox_DisplayMailScrollPane;
    private javax.swing.JTable Inbox_MailHeaderTable;
    private javax.swing.JScrollPane Inbox_MailHeadersScrollPane;
    private javax.swing.JPasswordField Inbox_Password;
    private javax.swing.JLabel Inbox_PasswordLabel;
    private javax.swing.JTextField Inbox_Pop3;
    private javax.swing.JLabel Inbox_Pop3Label;
    private javax.swing.JButton Inbox_RetrieveButton;
    private javax.swing.JTextField Inbox_Username;
    private javax.swing.JLabel Inbox_UsernameLabel;
    private javax.swing.JTabbedPane MainTab;
    private javax.swing.JTextArea SentMail_DisplayMail;
    private javax.swing.JScrollPane SentMail_DisplayMailScrollPane;
    private javax.swing.JScrollPane SentMail_SavedHeadersScrollPane;
    private javax.swing.JTable SentMail_SavedHeadersTable;
    private javax.swing.JLayeredPane SentMailsLayeredPane;
    private javax.swing.JPanel SentMailsPane;
    // End of variables declaration//GEN-END:variables
}
